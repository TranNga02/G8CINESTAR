<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>